name: Run Pytest and Upload to Artifactory
on:
  workflow_dispatch:
jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: set up python
      uses: actions/setup-python@v3
      with:
        python-version: 3.12

    - name: Update pip to the latest version
      run: |
        python -m pip install --upgrade pip

    - name: install poetry
      run: |
        pip install poetry
        echo "Poetry installed at:"
        which poetry
        poetry --version
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: install dependencies in python
      run: |
        poetry install --no-root


  run_tests:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: set up python   
      uses: actions/setup-python@v3
      with:
        python-version: 3.12

    - name: install poetry
      run: |
        pip install poetry
        echo "Poetry installed at:"
        which poetry
        poetry --version
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: install dependencies in python
      run: |
        poetry install --no-root
  

    - name: Check if pytest is installed
      run: |
        poetry show pytest 

    - name: Install Playwright Browsers
      run: |
          poetry run playwright install

    - name: Create a directory for test results
      run: |
          mkdir -p ./test_results 
          echo "Test Result: Passed" > ./test_results/result.txt

    - name: Run Pytest and save the results to a .txt file
      run: |
          poetry run pytest -v automation/tests/login_page_dertails_test/login_page_test_info.py > test_results/results.txt

    - name: Install JFrog CLI
      run: |
          curl -fL https://getcli.jfrog.io | sh
          sudo mv jfrog /usr/local/bin/

    - name: Configure JFrog CLI with Artifactory credentials
      run: |
          jfrog config add <server-id> --artifactory-url=$ARTIFACTORY_URL --user=$ARTIFACTORY_USER --password=$ARTIFACTORY_API_KEY

    - name: Upload pytest results to Artifactory
      run: |
        jfrog rt u "test_results/results.txt" "your-repo-name/pytest-results/results.txt" --flat=true
      env:
        ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
        ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
        ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
